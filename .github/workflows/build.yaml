name: RoboPD2 Web CI/CD Pipeline

on:
  push:
    branches: 
      - main
  pull_request:
    branches:
      - main

env:
  DOCKER_REGISTRY: docker.io
  APP_NAME: robopd2-web
  KANIKO_CACHE_ARGS: "--cache=true --cache-copy-layers=true --cache-ttl=24h"

jobs:
    build:
      runs-on: arc-runner-set # uses self-hosted runner scale set
      container:
        image: gcr.io/kaniko-project/executor:v1.20.0-debug # the kaniko image
      permissions:
        contents: read # read the repository

      steps:
        - name: Build and Push Image to GHCR with kaniko
          run: |
            cat <<EOF > /kaniko/.docker/config.json
            {
                "auths": {
                "ghcr.io": {
                    "auth": "$(echo -n "$GIT_USERNAME:$GIT_PASSWORD" | base64 -w0)"
                }
                }
            }
            EOF

            /kaniko/executor --dockerfile="./app/Dockerfile" \
                --context="${{ github.repositoryUrl }}#${{ github.ref }}#${{ github.sha }}"  \
                --destination="$GH_REGISTRY/$IMAGE_NAME:$(echo ${GITHUB_SHA} | head  -c 7)" \
                ${{ env.KANIKO_CACHE_ARGS }} \
                --push-retry 5 
            env: # needed to authenticate to github and download the repo
            GIT_USERNAME: ${{ github.actor }} 
            GIT_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
            GH_REGISTRY: "ghcr.io"
            IMAGE_NAME: "${{ github.repository }}/nginx"
  
    deploy-production:
      needs: build
      if: github.ref == 'refs/heads/main'
      runs-on: robopd2-runners
      steps:
      - uses: actions/checkout@v4
      
      - name: Setup Helm
        uses: azure/setup-helm@v4
        
      - name: Setup Kubernetes
        uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ env.KUBE_CONFIG }}
      
      - name: Deploy to Production
        run: |
          helm upgrade --install ${{ env.APP_NAME }}-production ./helm \
            --namespace production \
            --create-namespace \
            --set image.tag=${{ github.sha }} \
            --set ingress.hosts[0].host=${{ env.APP_NAME }}.yourdomain.com \
            --set replicaCount=3