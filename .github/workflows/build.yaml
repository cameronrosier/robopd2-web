name: RoboPD2 Web CI/CD Pipeline

on:
  push:
    branches: 
      - main
  pull_request:
    branches:
      - main

env:
  # Configure these variables in your GitHub repository secrets
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
  DOCKER_REGISTRY: docker.io
  APP_NAME: robopd2-web

jobs:
  build:
    runs-on: robopd2-runners
    steps:
      - uses: actions/checkout@v4
      
      # Kaniko Authentication
      - name: Create Docker Config Secret
        run: |
          mkdir -p /kaniko/.docker
          echo "{\"auths\":{\"${{ env.DOCKER_REGISTRY }}\":{\"username\":\"${{ env.DOCKER_USERNAME }}\",\"password\":\"${{ env.DOCKER_PASSWORD }}\"}}}" > /kaniko/.docker/config.json
      
      # Determine image tags dynamically
      - name: Generate Image Tags
        id: image-tags
        run: |
          TAGS="${{ env.DOCKER_REGISTRY }}/${{ env.APP_NAME }}:${{ github.sha }}"
          
          # Add additional tags for branch and PR
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            TAGS="${TAGS},${{ env.DOCKER_REGISTRY }}/${{ env.APP_NAME }}:latest"
          fi
          
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            TAGS="${TAGS},${{ env.DOCKER_REGISTRY }}/${{ env.APP_NAME }}:pr-${{ github.event.pull_request.number }}"
          fi
          
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
      
      # Build and Push with Kaniko
      - name: Build and Push with Kaniko
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.image-tags.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  
  deploy-production:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: robopd2-runners
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Helm
        uses: azure/setup-helm@v4
        
      - name: Setup Kubernetes
        uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ env.KUBE_CONFIG }}
      
      - name: Deploy to Production
        run: |
          helm upgrade --install ${{ env.APP_NAME }}-production ./helm \
            --namespace production \
            --create-namespace \
            --set image.tag=${{ github.sha }} \
            --set ingress.hosts[0].host=${{ env.APP_NAME }}.yourdomain.com \
            --set replicaCount=3
      
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.sha }}
          release_name: Release ${{ github.sha }}
          draft: false
          prerelease: false